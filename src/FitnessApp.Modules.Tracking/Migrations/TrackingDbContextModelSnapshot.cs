// <auto-generated />
using System;
using FitnessApp.Modules.Tracking.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessApp.Modules.Tracking.Migrations
{
    [DbContext(typeof(TrackingDbContext))]
    partial class TrackingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("tracking")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessApp.Modules.Tracking.Domain.Entities.PlannedWorkout", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsFromProgram")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_program");

                    b.Property<Guid?>("ProgramId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("program_id");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("date")
                        .HasColumnName("scheduled_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("workout_id");

                    b.Property<Guid?>("WorkoutSessionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("workout_session_id");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.HasIndex("ScheduledDate");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutId");

                    b.HasIndex("WorkoutSessionId");

                    b.HasIndex("UserId", "ScheduledDate");

                    b.HasIndex("UserId", "Status");

                    b.ToTable("planned_workouts", "tracking");
                });

            modelBuilder.Entity("FitnessApp.Modules.Tracking.Domain.Entities.UserMetric", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("MetricType")
                        .HasColumnType("int")
                        .HasColumnName("metric_type");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recorded_at");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<double>("Value")
                        .HasPrecision(10, 4)
                        .HasColumnType("float(10)");

                    b.HasKey("Id");

                    b.HasIndex("MetricType");

                    b.HasIndex("RecordedAt");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "MetricType");

                    b.HasIndex("UserId", "MetricType", "RecordedAt");

                    b.ToTable("user_metrics", "tracking");
                });

            modelBuilder.Entity("FitnessApp.Modules.Tracking.Domain.Entities.WorkoutSession", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CaloriesEstimated")
                        .HasColumnType("int")
                        .HasColumnName("calories_estimated");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_time");

                    b.Property<bool>("IsFromProgram")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_program");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("PerceivedDifficulty")
                        .HasColumnType("int")
                        .HasColumnName("perceived_difficulty");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("planned_date");

                    b.Property<Guid?>("ProgramId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("program_id");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDurationSeconds")
                        .HasColumnType("int")
                        .HasColumnName("total_duration_seconds");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlannedDate");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutId");

                    b.HasIndex("UserId", "StartTime");

                    b.HasIndex("UserId", "Status");

                    b.ToTable("workout_sessions", "tracking");
                });

            modelBuilder.Entity("FitnessApp.Modules.Tracking.Domain.Entities.WorkoutSessionExercise", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<double?>("Distance")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)")
                        .HasColumnName("distance_meters");

                    b.Property<int?>("DurationSeconds")
                        .HasColumnType("int")
                        .HasColumnName("duration_seconds");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("exercise_id");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("exercise_name");

                    b.Property<int>("MetricType")
                        .HasColumnType("int")
                        .HasColumnName("metric_type");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double?>("PerformanceScore")
                        .HasPrecision(5, 2)
                        .HasColumnType("float(5)")
                        .HasColumnName("performance_score");

                    b.Property<DateTime>("PerformedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("performed_at");

                    b.Property<int?>("Repetitions")
                        .HasColumnType("int");

                    b.Property<int?>("Sets")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<double?>("Value")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<double?>("Weight")
                        .HasPrecision(6, 2)
                        .HasColumnType("float(6)")
                        .HasColumnName("weight_kg");

                    b.Property<Guid>("WorkoutSessionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("workout_session_id");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("PerformedAt");

                    b.HasIndex("WorkoutSessionId");

                    b.HasIndex("WorkoutSessionId", "Order");

                    b.ToTable("workout_session_exercises", "tracking");
                });

            modelBuilder.Entity("FitnessApp.Modules.Tracking.Domain.Entities.WorkoutSessionExercise", b =>
                {
                    b.HasOne("FitnessApp.Modules.Tracking.Domain.Entities.WorkoutSession", "WorkoutSession")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutSession");
                });

            modelBuilder.Entity("FitnessApp.Modules.Tracking.Domain.Entities.WorkoutSession", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
